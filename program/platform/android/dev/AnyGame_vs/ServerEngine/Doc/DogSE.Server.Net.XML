<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DogSE.Server.Net</name>
    </assembly>
    <members>
        <member name="T:DogSE.Server.Net.ClientSession`1">
            <summary>
            客户端的Session
            </summary>
        </member>
        <member name="M:DogSE.Server.Net.ClientSession`1.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.ClientSession`1.Id">
            <summary>
             唯一id
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.ClientSession`1.SendEventArgs">
            <summary>
            发送数据上下文对象
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.ClientSession`1.ReceiveEventArgs">
            <summary>
            接收数据上下文对象
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.ClientSession`1.Data">
            <summary>
            和Session关联的对象
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.ClientSession`1.Socket">
            <summary>
            客户端对应的Socket
            </summary>
        </member>
        <member name="M:DogSE.Server.Net.ClientSession`1.#ctor(System.Net.Sockets.Socket)">
            <summary>
            客户端的session的初始化，必须有一个对应的网络连接
            </summary>
            <param name="socket"></param>
        </member>
        <member name="P:DogSE.Server.Net.ClientSession`1.ConnectTime">
            <summary>
            连接上的时间
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.ClientSession`1.OnlineTime">
            <summary>
            在线时间
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.ClientSession`1.RecvBuffer">
            <summary>
            接收的缓冲区数据，仅用于同底层数据交换时用
            </summary>
        </member>
        <member name="M:DogSE.Server.Net.ClientSession`1.SyncRecvData">
            <summary>
            重新异步开始接受数据
            </summary>
        </member>
        <member name="M:DogSE.Server.Net.ClientSession`1.CloseSocket">
            <summary>
            只关闭Socket
            </summary>
        </member>
        <member name="M:DogSE.Server.Net.ClientSession`1.Close">
            <summary>
            关闭连接
            </summary>
        </member>
        <member name="F:DogSE.Server.Net.ClientSession`1.m_PendingBuffer">
            <summary>
            等待需要发出的数据
            </summary>
        </member>
        <member name="M:DogSE.Server.Net.ClientSession`1.SendPackage(DogSE.Server.Net.DogBuffer,System.Boolean)">
            <summary>
            向客户端发送数据
            </summary>
            <param name="buff"></param>
            <param name="isSendNow">是否立即发送</param>
        </member>
        <member name="M:DogSE.Server.Net.ClientSession`1.PeekSend">
            <summary>
            检查队列里是否有要发送的数据，如果有则进行发送处理
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.ClientSession`1.RemoteOnlyIP">
            <summary>
            远程的地址
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.ClientSession`1.RemotePort">
            <summary>
            远程关联的端口
            </summary>
        </member>
        <member name="T:DogSE.Server.Net.SocketConnectEventArgs`1">
            <summary>
            sokcet连接事件
            </summary>
        </member>
        <member name="M:DogSE.Server.Net.SocketConnectEventArgs`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.SocketConnectEventArgs`1.Session">
            <summary>
            客户端连接的Session
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.SocketConnectEventArgs`1.AllowConnection">
            <summary>
            是否允许连接
            </summary>
        </member>
        <member name="T:DogSE.Server.Net.SocketDisconnectEventArgs`1">
            <summary>
            客户端发生关闭连接事件
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.SocketDisconnectEventArgs`1.Session">
            <summary>
            客户端连接的Session
            </summary>
        </member>
        <member name="T:DogSE.Server.Net.SocketRecvEventArgs`1">
            <summary>
            数据受到事件
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.SocketRecvEventArgs`1.Session">
            <summary>
            客户端Session
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.SocketRecvEventArgs`1.Buffer">
            <summary>
            缓冲区数据
            注意，这个buffer不要持有，要复制到自己的接收缓冲区
            这个buffer的数据将在事件完成后，重新进行投递
            </summary>
        </member>
        <member name="T:DogSE.Server.Net.DogBuffer32K">
            <summary>
            Dog引擎专属缓冲区
            </summary>
        </member>
        <member name="M:DogSE.Server.Net.DogBuffer32K.#ctor">
            <summary>
            Dog引擎专属缓冲区
            </summary>
        </member>
        <member name="T:DogSE.Server.Net.DogBufferType">
            <summary>
            缓冲区的长度尺寸
            </summary>
        </member>
        <member name="T:DogSE.Server.Net.DogBuffer">
            <summary>
            Dog引擎专属缓冲区
            </summary>
        </member>
        <member name="M:DogSE.Server.Net.DogBuffer.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="M:DogSE.Server.Net.DogBuffer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Server.Net.DogBuffer.m_buffer">
            <summary>
            字节的数组
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.DogBuffer.Bytes">
            <summary>
            缓冲区对应的字节数组长度
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.DogBuffer.Length">
            <summary>
            当前使用的数据长度
            </summary>
        </member>
        <member name="M:DogSE.Server.Net.DogBuffer.UpdateCapacity(System.Int32)">
            <summary>
            扩大缓冲数据的大小(注意，扩大后，Byte返回的数组的引用将不同)
            </summary>
            <param name="minSize">扩大的最小尺寸</param>
        </member>
        <member name="M:DogSE.Server.Net.DogBuffer.FixSize(System.Int32)">
            <summary>
            按照4K对齐
            </summary>
            <param name="minSize"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Server.Net.DogBuffer.Use">
            <summary>
            标记使用
            如果对象是通过 DogBufferPool 获得对象，则不用调用该方法
            如果是参数传入，并且需要使用它的byte数组，则需要先Use，再Release
            </summary>
        </member>
        <member name="M:DogSE.Server.Net.DogBuffer.Release">
            <summary>
            当不再使用缓冲区时，需要手动释放，对象会自动返回对象池里
            </summary>
        </member>
        <member name="F:DogSE.Server.Net.DogBuffer.s_pools">
            <summary>
            对象池
            </summary>
        </member>
        <member name="F:DogSE.Server.Net.DogBuffer.s_pools32K">
            <summary>
            对象池
            </summary>
        </member>
        <member name="M:DogSE.Server.Net.DogBuffer.GetFromPool4K">
            <summary>
            从缓冲池里获得数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Server.Net.DogBuffer.GetFromPool32K">
            <summary>
            从缓冲池里获得数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:DogSE.Server.Net.Listener`1">
            <summary>
            重写的监听器
            </summary>
        </member>
        <member name="F:DogSE.Server.Net.Listener`1.connectSessions">
            <summary>
            客户端连接上的Session组合
            </summary>
        </member>
        <member name="M:DogSE.Server.Net.Listener`1.StartServer(System.Int32)">
            <summary>
            启动服务器
            </summary>
            <param name="port"></param>
        </member>
        <member name="M:DogSE.Server.Net.Listener`1.StartServer(System.String,System.Int32)">
            <summary>
            启动服务器
            </summary>
            <param name="host"></param>
            <param name="port"></param>
        </member>
        <member name="M:DogSE.Server.Net.Listener`1.OnSocketAccept(System.IAsyncResult)">
            <summary>
            触发socket的连接
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:DogSE.Server.Net.Listener`1.NotifySocketRecvEvent(DogSE.Server.Net.ClientSession{`0},DogSE.Server.Net.DogBuffer)">
            <summary>
            抛出收到数据事件
            </summary>
            <param name="session"></param>
            <param name="buff"></param>
        </member>
        <member name="M:DogSE.Server.Net.Listener`1.DisconnectAll">
            <summary>
            关闭所有的客户端连接
            </summary>
        </member>
        <member name="M:DogSE.Server.Net.Listener`1.Close">
            <summary>
            关闭并停止服务器的socket操作
            </summary>
        </member>
        <member name="M:DogSE.Server.Net.Listener`1.CloseAllSession">
            <summary>
            关闭所有的session
            </summary>
        </member>
        <member name="E:DogSE.Server.Net.Listener`1.SocketConnect">
            <summary>
            当有客户端socket连接上服务器时，触发当前事件
            </summary>
        </member>
        <member name="E:DogSE.Server.Net.Listener`1.SocketDisconnect">
            <summary>
            socket发生关闭连接事件
            </summary>
            <remarks>
            不管是客户端主动关闭，还是客户端关闭，事件都是会触发到的
            </remarks>
        </member>
        <member name="E:DogSE.Server.Net.Listener`1.SocketRecv">
            <summary>
            socket有数据送达
            注意，这个buffer不要持有，要复制到自己的接收缓冲区
            这个buffer的数据将在事件完成后，重新进行投递
            </summary>
        </member>
        <member name="T:DogSE.Server.Net.NetProfile">
            <summary>
            网络层的性能
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.NetProfile.SendCount">
            <summary>
            发送的次数
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.NetProfile.SendLength">
            <summary>
            发送包的长度
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.NetProfile.RecvCount">
            <summary>
            接收的次数
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.NetProfile.RecvLength">
            <summary>
            接收的长度
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.NetProfile.AcceptCount">
            <summary>
            连接上来的数量
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.NetProfile.DisconnectCount">
            <summary>
            断开的数量
            </summary>
        </member>
        <member name="P:DogSE.Server.Net.NetProfile.Instatnce">
            <summary>
            单例
            </summary>
        </member>
    </members>
</doc>
